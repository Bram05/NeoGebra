#version 430 core

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(r32f, binding = 0) uniform image2D in_texture;
layout(r32f, binding = 1) uniform image2D out_texture;

void main() {
    int thickness = 5;

    ivec2 pos = ivec2( gl_GlobalInvocationID.xy );

    float in_val = imageLoad( in_texture, pos ).r;
    
    if (in_val == 0.0) 
    {
        imageStore( out_texture, pos, vec4( 1.0, 0.0, 0.0, 0.0 ) );
    }
    else 
    {
        in_val = abs(in_val);
        int pairs = 0;
        if(abs(imageLoad( in_texture, ivec2(pos.x-1, pos.y) ).r)   + 0.005 >= in_val && 
           abs(imageLoad( in_texture, ivec2(pos.x+1, pos.y) ).r)   + 0.005 >= in_val) { pairs++; }
        if(abs(imageLoad( in_texture, ivec2(pos.x, pos.y-1) ).r)   + 0.005 >= in_val && 
           abs(imageLoad( in_texture, ivec2(pos.x, pos.y+1) ).r)   + 0.005 >= in_val) { pairs++; }
        if(abs(imageLoad( in_texture, ivec2(pos.x+1, pos.y+1) ).r) + 0.005 >= in_val && 
           abs(imageLoad( in_texture, ivec2(pos.x-1, pos.y-1) ).r) + 0.005 >= in_val) { pairs++; }
        if(abs(imageLoad( in_texture, ivec2(pos.x+1, pos.y-1) ).r) + 0.005 >= in_val && 
           abs(imageLoad( in_texture, ivec2(pos.x-1, pos.y+1) ).r) + 0.005 >= in_val) { pairs++; }
        
        if (pairs >= 4 && in_val < 0.1)
        { 
            imageStore( out_texture, pos, vec4( 1.0, 0.0, 0.0, 0.0 ) );
        }
        else
        {
            imageStore( out_texture, pos, vec4( 0.0, 0.0, 0.0, 0.0 ) );
        }
    }
}