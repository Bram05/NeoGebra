#version 430 core

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(r32f, binding = 0) uniform image2D in_texture;
layout(r32f, binding = 1) uniform image2D out_texture;

//layout(location = 0) uniform int level;
//layout(location = 1) uniform ivec2 u_PrevMipmapSize;
layout(location = 0) uniform ivec2 u_MipmapSize;
layout(location = 1) uniform ivec2 u_PrevMipmapSize;

void main()
{
    ivec2 pos = ivec2( gl_GlobalInvocationID.xy );
	if (pos.x >= u_MipmapSize.x || pos.y >= u_MipmapSize.y)
        return;
	float biggest = imageLoad(in_texture, ivec2(2 * pos.x, 2 * pos.y    )).r;
	if (u_PrevMipmapSize.x != 1 && u_PrevMipmapSize.y != 1)
		biggest = max(biggest, imageLoad(in_texture, ivec2(2 * pos.x + 1, 2 * pos.y + 1)).r);
	if (u_PrevMipmapSize.x != 1)
		biggest = max(biggest, imageLoad(in_texture, ivec2(2 * pos.x + 1, 2 * pos.y    )).r);
	if (u_PrevMipmapSize.y != 1)
		biggest = max(biggest, imageLoad(in_texture, ivec2(2 * pos.x    , 2 * pos.y + 1)).r);

	if (pos.x == u_MipmapSize.x - 1 && u_PrevMipmapSize.x % 2 == 1 && u_PrevMipmapSize.x != 1)
	{
	biggest = max(biggest, imageLoad(in_texture, ivec2(2 * pos.x + 2, 2 * pos.y    )).r);
	biggest = max(biggest, imageLoad(in_texture, ivec2(2 * pos.x + 2, 2 * pos.y + 1)).r);
	}
	if (pos.y == u_MipmapSize.y - 1 && u_PrevMipmapSize.y % 2 == 1 && u_PrevMipmapSize.y != 1)
	{
	biggest = max(biggest, imageLoad(in_texture, ivec2(2 * pos.x    , 2 * pos.y + 2)).r);
	biggest = max(biggest, imageLoad(in_texture, ivec2(2 * pos.x + 1, 2 * pos.y + 2)).r);
	}
	if (pos.x == u_MipmapSize.x - 1 && u_PrevMipmapSize.x % 2 == 1  && u_PrevMipmapSize.x != 1  && u_PrevMipmapSize.y != 1&& pos.y == u_MipmapSize.y - 1 && u_PrevMipmapSize.y % 2 == 1)
	{
	biggest = max(biggest, imageLoad(in_texture, ivec2(2 * pos.x + 2, 2 * pos.y + 2)).r);
	}

    imageStore(out_texture, pos, vec4(biggest, 0.0,0.0,0.0));
}
